[platformio]
default_envs = example

extra_configs = 
    platformio-m5stack.ini

[env]
monitor_speed = 115200
monitor_filters = esp32_exception_decoder, time
upload_speed = 1500000

lib_ldf_mode = deep

build_src_filter = 
    +<**/*.cpp>
    +<**/*.hpp>

board_build.filesystem = littlefs
lib_deps = 
    Arduino_JSON

[release]
build_type = release
build_flags = -DCORE_DEBUG_LEVEL=3

[debug]
build_type = debug
build_flags = -DCORE_DEBUG_LEVEL=4 -DDEBUG


# -----------------------------------------------------------------------

[target-m5stack]
; extends = m5stack-basic-4MB
; extends = m5stack-basic-16MB
; extends = m5stack-fire
; extends = m5stack-m5go
; extends = m5stack-core2
; extends = m5stack-cores3
; extends = m5stick-c
; extends = m5stick-c-plus
; extends = m5stack-atom
; extends = m5stack-atom-matrix
extends = m5stack-atom-lite
; extends = m5stack-atom-echo
; extends = m5stack-atom-u
; extends = m5stack-atoms3
; extends = m5stack-atoms3r
; extends = m5stack-atoms3-lite
; exnteds = m5stakck-atoms3-u
; extends = m5stack-paper
; extends = m5stack-papers3
; extends = m5stack-coreink
; extends = m5stack-stamps3
; extends = m5stack-capsule
; extends = m5stack-cardputer
; extends = m5stack-din-meter
; extends = m5stack-nanoc6

[target-example]
; extends = examples-advanced-setup
extends = examples-basic-setup
; extends = examples-json-setup
; extends = examples-serial-setup
; extends = examples-smart-config-setup

[target]
extends = target-m5stack, target-example, m5unified
build_flags = 
    ${target-m5stack.build_flags}
    ${m5unified.build_flags}
lib_deps =
    ${target-m5stack.lib_deps}
    ${m5unified.lib_deps}

# -----------------------------------------------------------------------

[examples-advanced-setup]
build_src_filter = 
    ${env.build_src_filter}
    +<../examples/advanced_setup/*.cpp>
    +<../examples/advanced_setup/*.hpp>

[examples-basic-setup]
build_src_filter = 
    ${env.build_src_filter}
    +<../examples/basic_setup/*.cpp>
    +<../examples/basic_setup/*.hpp>

[examples-json-setup]
build_src_filter = 
    ${env.build_src_filter}
    +<../examples/json_setup/*.cpp>
    +<../examples/json_setup/*.hpp>

[examples-serial-setup]
build_src_filter = 
    ${env.build_src_filter}
    +<../examples/serial_setup/*.cpp>
    +<../examples/serial_setup/*.hpp>

[examples-smart-config-setup]
build_src_filter = 
    ${env.build_src_filter}
    +<../examples/smart_config_setup/*.cpp>
    +<../examples/smart_config_setup/*.hpp>

# -----------------------------------------------------------------------

[env:example]
extends = target, release
build_flags = 
    ${target.build_flags}
    ${release.build_flags}

[env:example-debug]
extends = target, debug
build_flags = 
    ${target.build_flags}
    ${debug.build_flags}
